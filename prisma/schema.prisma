// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// we can have multiple generators
generator client {
  provider = "prisma-client-js"
}

// we can only have one datasource
// we need a provider and url 
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// the different tables we have are the models
// User to Posts = One to many, one user can have many posts but a post can only have one user
model User {
  id             String          @id @default(uuid())
  age            Int
  name           String
  email          String          @unique
  role           Role            @default(BASIC)
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoritePosts  Post[]          @relation("FavoritePosts")
  UserPreference UserPreference?
}

// UserPreference to User = One to one, one user can have one user preference and one user preference can only have one user
model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

// Post to User = Many to one, one post can have one user but a user can have many posts
model Post {
  id            String     @id @default(uuid())
  title         String
  avarageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  // how we create a relationship between the two tables
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  categories    Category[]
}

// Category to post = many to many, one category can have many posts and one post can have many categories
model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role {
  BASIC
  EDITOR
  ADMIN
}
